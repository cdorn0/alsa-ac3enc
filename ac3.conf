defaults.pcm.ac3.aes0 0x06
defaults.pcm.ac3.aes1 0x82
defaults.pcm.ac3.aes2 0x00
defaults.pcm.ac3.aes3 0x00

pcm.!ac3 {
    @args [ CARD DEV AES0 AES1 AES2 AES3 ]

    @args.CARD {
        type string
        default {
            @func getenv
            vars [
                ALSA_IEC958_CARD
                ALSA_PCM_CARD
                ALSA_CARD
            ]
            default {
                @func refer
                name defaults.pcm.iec958.card
            }
        }
    }

    @args.DEV {
        type integer
        default {
            @func igetenv
            vars [
                ALSA_IEC958_DEVICE
            ]
            default {
                @func refer
                name defaults.pcm.iec958.device
            }
        }
    }

    @args.AES0 {
        type integer
        default {
            @func refer
            name defaults.pcm.ac3.aes0
        }
    }

    @args.AES1 {
        type integer
        default {
            @func refer
            name defaults.pcm.ac3.aes1
        }
    }

    @args.AES2 {
        type integer
        default {
            @func refer
            name defaults.pcm.ac3.aes2
        }
    }

    @args.AES3 {
        type integer
        default {
            @func refer
            name defaults.pcm.ac3.aes3
        }
    }

    type ac3
    slave.pcm {
        @func refer
        name {
            @func concat
            strings [
                "cards."
                {
                    @func card_driver
                    card $CARD
                }
                ".pcm.iec958." $DEV ":"
                "CARD=" $CARD ","
                "AES0=" $AES0 ","
                "AES1=" $AES1 ","
                "AES2=" $AES2 ","
                "AES3=" $AES3
            ]
        }
    }

    hint {
        show {
            @func refer
            name defaults.namehint.basic
        }
        description "AC3 Encoding through IEC958 (S/PDIF)"
        device $DEV
    }
}

pcm.!ac3hdmi {
    @args [ CARD DEV AES0 AES1 AES2 AES3 ]

    @args.CARD {
        type string
        default {
            @func getenv
            vars [
                ALSA_IEC958_CARD
                ALSA_PCM_CARD
                ALSA_CARD
            ]
            default {
                @func refer
                name defaults.pcm.iec958.card
            }
        }
    }

    @args.DEV {
        type integer
        default {
            @func igetenv
            vars [
                ALSA_IEC958_DEVICE
            ]
            default {
                @func refer
                name defaults.pcm.iec958.device
            }
        }
    }

    @args.AES0 {
        type integer
        default {
            @func refer
            name defaults.pcm.ac3.aes0
        }
    }

    @args.AES1 {
        type integer
        default {
            @func refer
            name defaults.pcm.ac3.aes1
        }
    }

    @args.AES2 {
        type integer
        default {
            @func refer
            name defaults.pcm.ac3.aes2
        }
    }

    @args.AES3 {
        type integer
        default {
            @func refer
            name defaults.pcm.ac3.aes3
        }
    }

    type ac3
    slave.pcm {
        @func refer
        name {
            @func concat
            strings [
                "cards."
                {
                    @func card_driver
                    card $CARD
                }
                ".pcm.hdmi." $DEV ":"
                "CARD=" $CARD ","
                "AES0=" $AES0 ","
                "AES1=" $AES1 ","
                "AES2=" $AES2 ","
                "AES3=" $AES3
            ]
        }
    }

    hint {
        show {
            @func refer
            name defaults.namehint.basic
        }
        description "AC3 Encoding through HDMI"
        device $DEV
    }
}
